{"ast":null,"code":"var _jsxFileName = \"/Users/tiagogomes/Documents/beezy/app/src/components/UI/Select.tsx\";\nimport React, { useState, useCallback, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Box from './Box';\nconst StyledSelect = styled(Box)({});\n\nfunction Select({\n  options,\n  onChange,\n  ...rest\n}) {\n  const [state, setState] = useState('');\n  const onChangeMemo = useCallback(onChange, [state]);\n  useEffect(() => {\n    onChangeMemo(state);\n  }, [state, onChangeMemo]);\n\n  const handleChange = e => {\n    e.preventDefault();\n    setState(e.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(StyledSelect, Object.assign({}, rest, {\n    onChange: handleChange,\n    as: \"select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 10\n    }\n  }), options.map(({\n    label,\n    value\n  }) => /*#__PURE__*/React.createElement(\"option\", {\n    key: value,\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, label)));\n}\n\nexport default Select;","map":{"version":3,"sources":["/Users/tiagogomes/Documents/beezy/app/src/components/UI/Select.tsx"],"names":["React","useState","useCallback","useEffect","styled","Box","StyledSelect","Select","options","onChange","rest","state","setState","onChangeMemo","handleChange","e","preventDefault","target","value","map","label"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,EAAuCC,SAAvC,QAAwD,OAAxD;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,GAAP,MAA8B,OAA9B;AAGA,MAAMC,YAAY,GAAGF,MAAM,CAACC,GAAD,CAAN,CAAsB,EAAtB,CAArB;;AAOA,SAASE,MAAT,CAAgB;AAACC,EAAAA,OAAD;AAASC,EAAAA,QAAT;AAAmB,KAAGC;AAAtB,CAAhB,EAAwD;AACtD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMY,YAAY,GAAGX,WAAW,CAACO,QAAD,EAAU,CAACE,KAAD,CAAV,CAAhC;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,YAAY,CAACF,KAAD,CAAZ;AACD,GAFQ,EAEN,CAACA,KAAD,EAAQE,YAAR,CAFM,CAAT;;AAIA,QAAMC,YAAY,GAAIC,CAAD,IAA6C;AAChEA,IAAAA,CAAC,CAACC,cAAF;AACAJ,IAAAA,QAAQ,CAACG,CAAC,CAACE,MAAF,CAASC,KAAV,CAAR;AACD,GAHD;;AAKA,sBAAO,oBAAC,YAAD,oBAAkBR,IAAlB;AAAwB,IAAA,QAAQ,EAAEI,YAAlC;AAAgD,IAAA,EAAE,EAAC,QAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACJN,OAAO,CAACW,GAAR,CAAY,CAAC;AAACC,IAAAA,KAAD;AAAOF,IAAAA;AAAP,GAAD,kBACX;AAAQ,IAAA,GAAG,EAAEA,KAAb;AAAoB,IAAA,KAAK,EAAEA,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCE,KAAnC,CADD,CADI,CAAP;AAKD;;AAED,eAAeb,MAAf","sourcesContent":["import React, { useState, useCallback, useEffect } from 'react'\nimport styled from 'styled-components'\nimport Box, { BoxProps } from './Box'\n\n\nconst StyledSelect = styled(Box)<BoxProps>({})\n\ninterface SelectProps {\n  options: {label:string,value:string}[]\n  onChange: (value:string) => void\n}\n\nfunction Select({options,onChange, ...rest}:SelectProps){\n  const [state, setState] = useState('')\n  const onChangeMemo = useCallback(onChange,[state])\n\n  useEffect(() => {\n    onChangeMemo(state)\n  }, [state, onChangeMemo])\n\n  const handleChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    e.preventDefault()\n    setState(e.target.value)\n  }\n\n  return <StyledSelect {...rest} onChange={handleChange} as=\"select\">\n    {options.map(({label,value}) => (\n      <option key={value} value={value}>{label}</option>\n    ))}\n  </StyledSelect>\n}\n\nexport default Select\n\n"]},"metadata":{},"sourceType":"module"}