{"ast":null,"code":"import 'whatwg-fetch';\nimport { useEffect, useState } from 'react';\nimport { API_URL } from '../utils/constants';\nexport function useCharacters(characters) {\n  const [isLoading, setLoading] = useState(true);\n  const [charactersImgs, setCharacter] = useState([]);\n  const urlsToFetch = characters.map(character => character.resourceURI.split(/public/g).pop());\n  console.log('urlsToFetch', urlsToFetch);\n  useEffect(() => {\n    async function getCharacters() {\n      Promise.all(urlsToFetch.map(async url => {\n        const response = await fetch(`${API_URL}${url}`);\n        const data = await response.json();\n        console.log(data.data.results.thumbnail);\n      })); // setCharacter(data)\n      // setLoading(false)\n    }\n\n    getCharacters();\n  }, []);\n  return {\n    isLoading\n  };\n}","map":{"version":3,"sources":["/Users/tiagogomes/Documents/beezy/app/src/hooks/useCharacters.ts"],"names":["useEffect","useState","API_URL","useCharacters","characters","isLoading","setLoading","charactersImgs","setCharacter","urlsToFetch","map","character","resourceURI","split","pop","console","log","getCharacters","Promise","all","url","response","fetch","data","json","results","thumbnail"],"mappings":"AAAA,OAAO,cAAP;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,OAAT,QAAwB,oBAAxB;AAGA,OAAO,SAASC,aAAT,CAAuBC,UAAvB,EAA6D;AAClE,QAAM,CAACC,SAAD,EAAYC,UAAZ,IAA0BL,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACM,cAAD,EAAiBC,YAAjB,IAAiCP,QAAQ,CAAU,EAAV,CAA/C;AAEA,QAAMQ,WAAW,GAAGL,UAAU,CAACM,GAAX,CAAeC,SAAS,IAAIA,SAAS,CAACC,WAAV,CAAsBC,KAAtB,CAA4B,SAA5B,EAAuCC,GAAvC,EAA5B,CAApB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BP,WAA3B;AACAT,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeiB,aAAf,GAA+B;AAC7BC,MAAAA,OAAO,CAACC,GAAR,CAAYV,WAAW,CAACC,GAAZ,CAAiB,MAAOU,GAAP,IAAe;AAC1C,cAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEpB,OAAQ,GAAEkB,GAAI,EAAlB,CAA5B;AACA,cAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAT,QAAAA,OAAO,CAACC,GAAR,CAAYO,IAAI,CAACA,IAAL,CAAUE,OAAV,CAAkBC,SAA9B;AAED,OALW,CAAZ,EAD6B,CAQ7B;AACA;AACD;;AACDT,IAAAA,aAAa;AACd,GAbQ,EAaN,EAbM,CAAT;AAeA,SAAO;AAAEZ,IAAAA;AAAF,GAAP;AACD","sourcesContent":["import 'whatwg-fetch'\nimport { useEffect, useState } from 'react'\nimport { API_URL } from '../utils/constants'\nimport { Character,Image, UseCharacters } from './Comic'\n\nexport function useCharacters(characters:Character[]): UseCharacters{\n  const [isLoading, setLoading] = useState(true)\n  const [charactersImgs, setCharacter] = useState<Image[]>([])\n  \n  const urlsToFetch = characters.map(character => character.resourceURI.split(/public/g).pop())\n\n  console.log('urlsToFetch', urlsToFetch)\n  useEffect(() => {\n    async function getCharacters() {\n      Promise.all(urlsToFetch.map( async (url) => {\n        const response = await fetch(`${API_URL}${url}`)\n        const data = await response.json()\n        console.log(data.data.results.thumbnail)\n        \n      }))\n      \n      // setCharacter(data)\n      // setLoading(false)\n    }\n    getCharacters()\n  }, [])\n  \n  return { isLoading }\n}\n"]},"metadata":{},"sourceType":"module"}