{"ast":null,"code":"var _jsxFileName = \"/Users/tiagogomes/Documents/beezy/app/src/components/Master/Master.tsx\";\nimport React from 'react';\nimport { useRouteMatch } from 'react-router-dom';\nimport { useComics } from '../../hooks';\nimport UserActions from './UserActions';\nimport { Ul, Li } from '../UI/Lists';\nimport Link from '../UI/Link';\nimport Button from '../UI/Button';\nimport Grid from '../UI/Grid';\nimport Loader from '../UI/Loader';\n\nfunction Master() {\n  const {\n    data,\n    isLoading,\n    loadMore\n  } = useComics();\n  const {\n    url\n  } = useRouteMatch(); // const [displayMode, setDisplayMode] = \n\n  const sortByTitle = {\n    \"a>z\": (a, b) => a.title > b.title ? 1 : -1,\n    \"z>a\": (a, b) => a.title < b.title ? 1 : -1\n  }; // const sortComics = (arr:Comic[]) => arr.sort(sortByTitle)\n  // const filterByCharacter = (term: string) => (a: Comic) => {\n  //   const charactersName = a.characters.items.map(({ name }: Character) => name)\n  //   return charactersName.includes(term)\n  // }\n  // const filterComics = (term: string) => (arr: Comic[]) => arr.filter(filterByCharacter(term))\n  // const sortAndFilter = compose(sortComics, filterComics('Captain America'))\n  // const dataToRender:Comic[] = sortAndFilter([])\n\n  const handleSort = e => {\n    console.log(e);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(UserActions, {\n    sort: handleSort,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }), !data.length && isLoading && /*#__PURE__*/React.createElement(Loader, {\n    big: true,\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 39\n    }\n  }), /*#__PURE__*/React.createElement(Ul, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, data.map(({\n    id,\n    title\n  }, idx) => /*#__PURE__*/React.createElement(Li, {\n    paddingY: 1,\n    paddingX: 5,\n    key: `${idx}/${id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    fontSize: 4,\n    to: `${url}/${id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, title)))), data.length > 0 && /*#__PURE__*/React.createElement(Grid, {\n    variant: \"container\",\n    justifyContent: \"center\",\n    marginY: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    isLoading: isLoading,\n    onClick: () => loadMore(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, \"Load More\")));\n}\n\nexport default Master;","map":{"version":3,"sources":["/Users/tiagogomes/Documents/beezy/app/src/components/Master/Master.tsx"],"names":["React","useRouteMatch","useComics","UserActions","Ul","Li","Link","Button","Grid","Loader","Master","data","isLoading","loadMore","url","sortByTitle","a","b","title","handleSort","e","console","log","length","map","id","idx"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,aAAR,QAA4B,kBAA5B;AACA,SAASC,SAAT,QAA0B,aAA1B;AAGA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,SAAQC,EAAR,EAAYC,EAAZ,QAAqB,aAArB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,MAAP,MAAmB,cAAnB;;AAGA,SAASC,MAAT,GAAiB;AACf,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,SAAR;AAAmBC,IAAAA;AAAnB,MAA2CX,SAAS,EAA1D;AACA,QAAM;AAAEY,IAAAA;AAAF,MAAUb,aAAa,EAA7B,CAFe,CAGf;;AAEA,QAAMc,WAAW,GAAG;AAClB,WAAO,CAACC,CAAD,EAASC,CAAT,KAAqBD,CAAC,CAACE,KAAF,GAAUD,CAAC,CAACC,KAAZ,GAAoB,CAApB,GAAwB,CAAC,CADnC;AAElB,WAAO,CAACF,CAAD,EAAWC,CAAX,KAAwBD,CAAC,CAACE,KAAF,GAAUD,CAAC,CAACC,KAAZ,GAAoB,CAApB,GAAwB,CAAC;AAFtC,GAApB,CALe,CASf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,QAAMC,UAAU,GAAIC,CAAD,IAAO;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD,GAFD;;AAIA,sBACE,uDACE,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAED,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEI,CAACR,IAAI,CAACY,MAAN,IAAgBX,SAAjB,iBAA+B,oBAAC,MAAD;AAAQ,IAAA,GAAG,MAAX;AAAY,IAAA,KAAK,EAAC,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFlC,eAGE,oBAAC,EAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,IAAI,CAACa,GAAL,CAAS,CAAC;AAAEC,IAAAA,EAAF;AAAMP,IAAAA;AAAN,GAAD,EAAuBQ,GAAvB,kBACR,oBAAC,EAAD;AACE,IAAA,QAAQ,EAAE,CADZ;AAEE,IAAA,QAAQ,EAAE,CAFZ;AAGE,IAAA,GAAG,EAAG,GAAEA,GAAI,IAAGD,EAAG,EAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAE,CAAhB;AAAmB,IAAA,EAAE,EAAG,GAAEX,GAAI,IAAGW,EAAG,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwCP,KAAxC,CALF,CADD,CADH,CAHF,EAcGP,IAAI,CAACY,MAAL,GAAc,CAAd,iBACC,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAC,WAAd;AAA0B,IAAA,cAAc,EAAC,QAAzC;AAAkD,IAAA,OAAO,EAAE,CAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAEX,SAAnB;AAA8B,IAAA,OAAO,EAAE,MAAMC,QAAQ,EAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CAfJ,CADF;AAwBD;;AAED,eAAeH,MAAf","sourcesContent":["import React from 'react'\nimport {useRouteMatch} from 'react-router-dom'\nimport { useComics } from '../../hooks'\nimport { Comic, UseComics, Character } from '../../hooks/Comic'\n\nimport UserActions from './UserActions'\n\nimport {Ul, Li} from '../UI/Lists'\nimport Link from '../UI/Link'\nimport Button from '../UI/Button'\nimport Grid from '../UI/Grid'\nimport Loader from '../UI/Loader'\nimport compose from '../../utils/compose'\n\nfunction Master(){\n  const { data, isLoading, loadMore }: UseComics = useComics()\n  const { url } = useRouteMatch();\n  // const [displayMode, setDisplayMode] = \n\n  const sortByTitle = {\n    \"a>z\": (a:Comic,b:Comic) => a.title > b.title ? 1 : -1,\n    \"z>a\": (a: Comic, b: Comic) => a.title < b.title ? 1 : -1,\n  }\n  // const sortComics = (arr:Comic[]) => arr.sort(sortByTitle)\n  // const filterByCharacter = (term: string) => (a: Comic) => {\n  //   const charactersName = a.characters.items.map(({ name }: Character) => name)\n  //   return charactersName.includes(term)\n  // }\n  // const filterComics = (term: string) => (arr: Comic[]) => arr.filter(filterByCharacter(term))\n  // const sortAndFilter = compose(sortComics, filterComics('Captain America'))\n  // const dataToRender:Comic[] = sortAndFilter([])\n\n\n  const handleSort = (e) => {\n    console.log(e)\n  }\n\n  return (\n    <>\n      <UserActions sort={handleSort}/>\n      {(!data.length && isLoading) && <Loader big color=\"secondary\" />}\n      <Ul>\n        {data.map(({ id, title }: Comic, idx) => (\n          <Li\n            paddingY={1}\n            paddingX={5}\n            key={`${idx}/${id}`}\n          >\n            <Link fontSize={4} to={`${url}/${id}`}>{title}</Link>\n          </Li>\n        ))}\n      </Ul>\n      {data.length > 0 && (\n        <Grid variant=\"container\" justifyContent=\"center\" marginY={2}>\n          <Button isLoading={isLoading} onClick={() => loadMore()}>Load More</Button>\n        </Grid>\n      )}\n    </>\n  )\n    \n  \n}\n\nexport default Master"]},"metadata":{},"sourceType":"module"}