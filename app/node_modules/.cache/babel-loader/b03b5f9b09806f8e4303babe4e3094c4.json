{"ast":null,"code":"var _jsxFileName = \"/Users/tiagogomes/Documents/beezy/app/src/components/Master/Master.tsx\";\nimport React from 'react';\nimport { useRouteMatch } from 'react-router-dom';\nimport { useComics } from '../../hooks';\nimport UserActions from './UserActions';\nimport { Ul, Li } from '../UI/Lists';\nimport Link from '../UI/Link';\nimport Button from '../UI/Button';\nimport Grid from '../UI/Grid';\nimport Loader from '../UI/Loader';\n\nfunction Master() {\n  const {\n    data,\n    isLoading,\n    loadMore\n  } = useComics();\n  const {\n    url\n  } = useRouteMatch();\n  const [sortAndFilterOptions, setSortAndFilter] = React.useState('a>z'); // const [dataToRender, setNewData] = React.useState<Comic[]>(data)\n\n  const sortingOptions = {\n    \"a>z\": (a, b) => a.title < b.title ? 1 : -1,\n    \"z>a\": (a, b) => a.title > b.title ? 1 : -1\n  }; // const filterByCharacter = (term: string) => (a: Comic) => {\n  //   const charactersName = a.characters.items.map(({ name }: Character) => name)\n  //   return charactersName.includes(term)\n  // }\n  // const filterComics = (term: string) => (arr: Comic[]) => arr.filter(filterByCharacter(term))\n  // const sortAndFilter = compose(sortComics, filterComics('Captain America'))\n\n  const dataToRender = React.useRef();\n  React.useEffect(() => {\n    // setNewData(data)\n    console.log('FROM HOOK OPT==>', sortAndFilterOptions);\n    dataToRender.current = data.sort(sortingOptions[sortAndFilterOptions]);\n    console.log('FROM HOOK NEW DATA==>', dataToRender); // setNewData(newData)\n    // console.log('FROM HOOK DATA TO RENDER==>', dataToRender)\n  }, [sortAndFilterOptions, data, sortingOptions, dataToRender]);\n\n  const handleSort = opt => {\n    console.log('FROM HANDLE ==>', opt);\n    if (opt) return setSortAndFilter(opt);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(UserActions, {\n    sort: handleSort,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }), !(dataToRender === null || dataToRender === void 0 ? void 0 : dataToRender.current.length) && isLoading && /*#__PURE__*/React.createElement(Loader, {\n    big: true,\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 56\n    }\n  }), /*#__PURE__*/React.createElement(Ul, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, dataToRender === null || dataToRender === void 0 ? void 0 : dataToRender.current.map(({\n    id,\n    title\n  }, idx) => /*#__PURE__*/React.createElement(Li, {\n    paddingY: 1,\n    paddingX: 5,\n    key: `${idx}/${id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    fontSize: 4,\n    to: `${url}/${id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, title)))), (dataToRender === null || dataToRender === void 0 ? void 0 : dataToRender.current.length) > 0 && /*#__PURE__*/React.createElement(Grid, {\n    variant: \"container\",\n    justifyContent: \"center\",\n    marginY: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    isLoading: isLoading,\n    onClick: () => loadMore(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, \"Load More\")));\n}\n\nexport default Master;","map":{"version":3,"sources":["/Users/tiagogomes/Documents/beezy/app/src/components/Master/Master.tsx"],"names":["React","useRouteMatch","useComics","UserActions","Ul","Li","Link","Button","Grid","Loader","Master","data","isLoading","loadMore","url","sortAndFilterOptions","setSortAndFilter","useState","sortingOptions","a","b","title","dataToRender","useRef","useEffect","console","log","current","sort","handleSort","opt","length","map","id","idx"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,aAAR,QAA4B,kBAA5B;AACA,SAASC,SAAT,QAA0B,aAA1B;AAGA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,SAAQC,EAAR,EAAYC,EAAZ,QAAqB,aAArB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,MAAP,MAAmB,cAAnB;;AAOA,SAASC,MAAT,GAAiB;AACf,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,SAAR;AAAmBC,IAAAA;AAAnB,MAA2CX,SAAS,EAA1D;AACA,QAAM;AAAEY,IAAAA;AAAF,MAAUb,aAAa,EAA7B;AACA,QAAM,CAACc,oBAAD,EAAuBC,gBAAvB,IAA2ChB,KAAK,CAACiB,QAAN,CAAuB,KAAvB,CAAjD,CAHe,CAIf;;AAGA,QAAMC,cAA4B,GAAG;AACnC,WAAO,CAACC,CAAD,EAAGC,CAAH,KAASD,CAAC,CAACE,KAAF,GAAUD,CAAC,CAACC,KAAZ,GAAoB,CAApB,GAAwB,CAAC,CADN;AAEnC,WAAO,CAACF,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,KAAF,GAAUD,CAAC,CAACC,KAAZ,GAAoB,CAApB,GAAwB,CAAC;AAFP,GAArC,CAPe,CAWf;AACE;AACA;AACA;AACA;AACA;;AACF,QAAMC,YAAY,GAAGtB,KAAK,CAACuB,MAAN,EAArB;AACAvB,EAAAA,KAAK,CAACwB,SAAN,CAAgB,MAAM;AACpB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCX,oBAAhC;AACAO,IAAAA,YAAY,CAACK,OAAb,GAAuBhB,IAAI,CAACiB,IAAL,CAAUV,cAAc,CAACH,oBAAD,CAAxB,CAAvB;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCJ,YAArC,EAJoB,CAKpB;AACA;AACD,GAPD,EAOG,CAACP,oBAAD,EAAuBJ,IAAvB,EAA6BO,cAA7B,EAA4CI,YAA5C,CAPH;;AASA,QAAMO,UAAU,GAAIC,GAAD,IAAgB;AACjCL,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BI,GAA/B;AACA,QAAIA,GAAJ,EAAS,OAAOd,gBAAgB,CAACc,GAAD,CAAvB;AAEV,GAJD;;AAMA,sBACE,uDACE,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAED,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEI,EAACP,YAAD,aAACA,YAAD,uBAACA,YAAY,CAAEK,OAAd,CAAsBI,MAAvB,KAAiCnB,SAAlC,iBAAgD,oBAAC,MAAD;AAAQ,IAAA,GAAG,MAAX;AAAY,IAAA,KAAK,EAAC,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFnD,eAGE,oBAAC,EAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGU,YADH,aACGA,YADH,uBACGA,YAAY,CAAEK,OAAd,CAAsBK,GAAtB,CAA0B,CAAC;AAAEC,IAAAA,EAAF;AAAMZ,IAAAA;AAAN,GAAD,EAAuBa,GAAvB,kBACzB,oBAAC,EAAD;AACE,IAAA,QAAQ,EAAE,CADZ;AAEE,IAAA,QAAQ,EAAE,CAFZ;AAGE,IAAA,GAAG,EAAG,GAAEA,GAAI,IAAGD,EAAG,EAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAE,CAAhB;AAAmB,IAAA,EAAE,EAAG,GAAEnB,GAAI,IAAGmB,EAAG,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwCZ,KAAxC,CALF,CADD,CADH,CAHF,EAcG,CAAAC,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAEK,OAAd,CAAsBI,MAAtB,IAA+B,CAA/B,iBACC,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAC,WAAd;AAA0B,IAAA,cAAc,EAAC,QAAzC;AAAkD,IAAA,OAAO,EAAE,CAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAEnB,SAAnB;AAA8B,IAAA,OAAO,EAAE,MAAMC,QAAQ,EAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CAfJ,CADF;AAwBD;;AAED,eAAeH,MAAf","sourcesContent":["import React from 'react'\nimport {useRouteMatch} from 'react-router-dom'\nimport { useComics } from '../../hooks'\nimport { Comic, UseComics, Character } from '../../hooks/Comic'\n\nimport UserActions from './UserActions'\n\nimport {Ul, Li} from '../UI/Lists'\nimport Link from '../UI/Link'\nimport Button from '../UI/Button'\nimport Grid from '../UI/Grid'\nimport Loader from '../UI/Loader'\nimport compose from '../../utils/compose'\n\ninterface ISortByTitle {\n  [key: string]: (a: Comic, b: Comic) => number\n}\n\nfunction Master(){\n  const { data, isLoading, loadMore }: UseComics = useComics()\n  const { url } = useRouteMatch();\n  const [sortAndFilterOptions, setSortAndFilter] = React.useState<string>('a>z')\n  // const [dataToRender, setNewData] = React.useState<Comic[]>(data)\n  \n\n  const sortingOptions: ISortByTitle = {\n    \"a>z\": (a,b) => a.title < b.title ? 1 : -1,\n    \"z>a\": (a, b) => a.title > b.title ? 1 : -1,\n  }\n  // const filterByCharacter = (term: string) => (a: Comic) => {\n    //   const charactersName = a.characters.items.map(({ name }: Character) => name)\n    //   return charactersName.includes(term)\n    // }\n    // const filterComics = (term: string) => (arr: Comic[]) => arr.filter(filterByCharacter(term))\n    // const sortAndFilter = compose(sortComics, filterComics('Captain America'))\n  const dataToRender = React.useRef<Comic[]>()\n  React.useEffect(() => {\n    // setNewData(data)\n    console.log('FROM HOOK OPT==>', sortAndFilterOptions)\n    dataToRender.current = data.sort(sortingOptions[sortAndFilterOptions])\n    console.log('FROM HOOK NEW DATA==>', dataToRender)\n    // setNewData(newData)\n    // console.log('FROM HOOK DATA TO RENDER==>', dataToRender)\n  }, [sortAndFilterOptions, data, sortingOptions,dataToRender])\n    \n  const handleSort = (opt:string) => {\n    console.log('FROM HANDLE ==>', opt)\n    if (opt) return setSortAndFilter(opt)\n    \n  }\n\n  return (\n    <>\n      <UserActions sort={handleSort}/>\n      {(!dataToRender?.current.length && isLoading) && <Loader big color=\"secondary\" />}\n      <Ul>\n        {dataToRender?.current.map(({ id, title }: Comic, idx) => (\n          <Li\n            paddingY={1}\n            paddingX={5}\n            key={`${idx}/${id}`}\n          >\n            <Link fontSize={4} to={`${url}/${id}`}>{title}</Link>\n          </Li>\n        ))}\n      </Ul>\n      {dataToRender?.current.length > 0 && (\n        <Grid variant=\"container\" justifyContent=\"center\" marginY={2}>\n          <Button isLoading={isLoading} onClick={() => loadMore()}>Load More</Button>\n        </Grid>\n      )}\n    </>\n  )\n    \n  \n}\n\nexport default Master"]},"metadata":{},"sourceType":"module"}