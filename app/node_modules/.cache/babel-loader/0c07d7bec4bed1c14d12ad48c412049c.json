{"ast":null,"code":"var _jsxFileName = \"/Users/tiagogomes/Documents/beezy/app/src/components/Master/Master.tsx\";\nimport React from 'react';\nimport { useRouteMatch } from 'react-router-dom';\nimport { useComics } from '../../hooks';\nimport UserActions from './UserActions';\nimport { Ul, Li } from '../UI/Lists';\nimport Link from '../UI/Link';\nimport Button from '../UI/Button';\nimport Grid from '../UI/Grid';\nimport Loader from '../UI/Loader';\nimport compose from '../../utils/compose';\n\nfunction Master() {\n  const {\n    data,\n    isLoading,\n    loadMore\n  } = useComics();\n  const {\n    url\n  } = useRouteMatch();\n\n  const sortByTitle = (a, b) => a.title > b.title ? 1 : -1;\n\n  const sortComics = arr => arr.sort(sortByTitle);\n\n  const filterByCharacter = term => a => {\n    const charactersName = a.characters.items.map(({\n      name\n    }) => name);\n    return charactersName.includes(term);\n  };\n\n  const filterComics = term => arr => arr.filter(filterByCharacter(term));\n\n  const sortAndFilter = compose(sortComics, filterComics('Captain America'));\n  const dataToRender = sortAndFilter(data);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(UserActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }), !dataToRender.length && isLoading && /*#__PURE__*/React.createElement(Loader, {\n    big: true,\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 47\n    }\n  }), /*#__PURE__*/React.createElement(Ul, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, dataToRender.map(({\n    id,\n    title\n  }, idx) => /*#__PURE__*/React.createElement(Li, {\n    paddingY: 1,\n    paddingX: 5,\n    key: `${idx}/${id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    fontSize: 4,\n    to: `${url}/${id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, title)))), dataToRender.length > 0 && /*#__PURE__*/React.createElement(Grid, {\n    variant: \"container\",\n    justifyContent: \"center\",\n    marginY: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    isLoading: isLoading,\n    onClick: () => loadMore(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, \"Load More\")));\n}\n\nexport default Master;","map":{"version":3,"sources":["/Users/tiagogomes/Documents/beezy/app/src/components/Master/Master.tsx"],"names":["React","useRouteMatch","useComics","UserActions","Ul","Li","Link","Button","Grid","Loader","compose","Master","data","isLoading","loadMore","url","sortByTitle","a","b","title","sortComics","arr","sort","filterByCharacter","term","charactersName","characters","items","map","name","includes","filterComics","filter","sortAndFilter","dataToRender","length","id","idx"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {useRouteMatch} from 'react-router-dom'\nimport { useComics } from '../../hooks'\nimport { Comic, UseComics, Character } from '../../hooks/Comic'\n\nimport UserActions from './UserActions'\n\nimport {Ul, Li} from '../UI/Lists'\nimport Link from '../UI/Link'\nimport Button from '../UI/Button'\nimport Grid from '../UI/Grid'\nimport Loader from '../UI/Loader'\nimport compose from '../../utils/compose'\n\nfunction Master(){\n  const { data, isLoading, loadMore }: UseComics = useComics()\n  const { url } = useRouteMatch();\n\n  const sortByTitle = (a:Comic,b:Comic) => a.title > b.title ? 1 : -1\n  const sortComics = (arr:Comic[]) => arr.sort(sortByTitle)\n  const filterByCharacter = (term: string) => (a: Comic) => {\n    const charactersName = a.characters.items.map(({ name }: Character) => name)\n    return charactersName.includes(term)\n  }\n  const filterComics = (term: string) => (arr: Comic[]) => arr.filter(filterByCharacter(term))\n  const sortAndFilter = compose(sortComics, filterComics('Captain America'))\n  const dataToRender:Comic[] = sortAndFilter(data)\n\n \n\n  return (\n    <>\n      <UserActions />\n      {(!dataToRender.length && isLoading) && <Loader big color=\"secondary\" />}\n      <Ul>\n        {dataToRender.map(({ id, title }: Comic, idx) => (\n          <Li\n            paddingY={1}\n            paddingX={5}\n            key={`${idx}/${id}`}\n          >\n            <Link fontSize={4} to={`${url}/${id}`}>{title}</Link>\n          </Li>\n        ))}\n      </Ul>\n      {dataToRender.length > 0 && (\n        <Grid variant=\"container\" justifyContent=\"center\" marginY={2}>\n          <Button isLoading={isLoading} onClick={() => loadMore()}>Load More</Button>\n        </Grid>\n      )}\n    </>\n  )\n    \n  \n}\n\nexport default Master"]},"metadata":{},"sourceType":"module"}