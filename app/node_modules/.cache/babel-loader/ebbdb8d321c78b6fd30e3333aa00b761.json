{"ast":null,"code":"var _jsxFileName = \"/Users/tiagogomes/Documents/beezy/app/src/components/UI/Select.tsx\";\nimport React from 'react'; // import styled from 'styled-components'\n\nimport RSelect from 'react-select';\nimport { colors, borderStyles, borderWidths, sizes, radii, space, fontSizes, lineHeights } from './theme'; // const StyledSelect = styled(RSelect)`\n//   width: ${({ theme }) => `${theme.sizes['small']}`};\n//   outline: none;\n//   box-shadow: none;\n//   border: ${({ theme }) => `${theme.borderWidths[1]} ${theme.borderStyles['outline']} ${theme.colors['secondary']}`};\n//   border-radius:0;\n// `\n\nconst styles = {\n  control: provided => ({ ...provided,\n    // none of react-select's styles are passed to <Control />\n    width: sizes[\"medium\"],\n    paddingTop: space[1],\n    paddingBottom: space[1],\n    // paddingX:{2},\n    fontSize: fontSizes[2],\n    lineHeight: lineHeights[1],\n    borderStyle: borderStyles['outline'],\n    borderWidth: borderWidths[1],\n    borderColor: colors[\"secondary\"],\n    backgroundColor: colors[\"transparent\"],\n    color: colors[\"text\"],\n    borderRadius: radii[0]\n  })\n};\n\nfunction Select({\n  options,\n  onChange,\n  ...rest\n}) {\n  // const [state, setState] = useState('')\n  // const onChangeMemo = useCallback(onChange,[])\n  // useEffect(() => {\n  //   onChangeMemo(state)\n  // }, [state, onChangeMemo])\n  const handleChange = value => {\n    // e.preventDefault()\n    onChange(value);\n  };\n\n  return /*#__PURE__*/React.createElement(RSelect, Object.assign({}, rest, {\n    onChange: handleChange,\n    options: options,\n    styles: styles // as=\"select\"\n    // width=\"small\"\n    // paddingY={1}\n    // paddingX={2}\n    // fontSize={2}\n    // lineHeight={1}\n    // borderStyle='outline'\n    // borderWidth={1}\n    // borderColor=\"secondary\"\n    // backgroundColor=\"transparent\"\n    // color=\"text\"\n    // borderRadius={0}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }));\n}\n\nexport default Select;","map":{"version":3,"sources":["/Users/tiagogomes/Documents/beezy/app/src/components/UI/Select.tsx"],"names":["React","RSelect","colors","borderStyles","borderWidths","sizes","radii","space","fontSizes","lineHeights","styles","control","provided","width","paddingTop","paddingBottom","fontSize","lineHeight","borderStyle","borderWidth","borderColor","backgroundColor","color","borderRadius","Select","options","onChange","rest","handleChange","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,OAAP,MAAmD,cAAnD;AACA,SAAQC,MAAR,EAAgBC,YAAhB,EAA8BC,YAA9B,EAA4CC,KAA5C,EAAmDC,KAAnD,EAA0DC,KAA1D,EAAgEC,SAAhE,EAA0EC,WAA1E,QAA6F,SAA7F,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,OAAO,EAAGC,QAAD,KAAmB,EAC1B,GAAGA,QADuB;AAE1B;AACAC,IAAAA,KAAK,EAACR,KAAK,CAAC,QAAD,CAHe;AAI1BS,IAAAA,UAAU,EAACP,KAAK,CAAC,CAAD,CAJU;AAK1BQ,IAAAA,aAAa,EAACR,KAAK,CAAC,CAAD,CALO;AAM1B;AACAS,IAAAA,QAAQ,EAACR,SAAS,CAAC,CAAD,CAPQ;AAQ1BS,IAAAA,UAAU,EAACR,WAAW,CAAC,CAAD,CARI;AAS1BS,IAAAA,WAAW,EAACf,YAAY,CAAC,SAAD,CATE;AAU1BgB,IAAAA,WAAW,EAACf,YAAY,CAAC,CAAD,CAVE;AAW1BgB,IAAAA,WAAW,EAAClB,MAAM,CAAC,WAAD,CAXQ;AAY1BmB,IAAAA,eAAe,EAACnB,MAAM,CAAC,aAAD,CAZI;AAa1BoB,IAAAA,KAAK,EAACpB,MAAM,CAAC,MAAD,CAbc;AAc1BqB,IAAAA,YAAY,EAACjB,KAAK,CAAC,CAAD;AAdQ,GAAnB;AADI,CAAf;;AAwBA,SAASkB,MAAT,CAAgB;AAACC,EAAAA,OAAD;AAASC,EAAAA,QAAT;AAAmB,KAAGC;AAAtB,CAAhB,EAAwD;AACtD;AACA;AAEA;AACA;AACA;AAEA,QAAMC,YAAY,GAAIC,KAAD,IAA2B;AAC9C;AACAH,IAAAA,QAAQ,CAACG,KAAD,CAAR;AACD,GAHD;;AAKA,sBACE,oBAAC,OAAD,oBAAaF,IAAb;AACE,IAAA,QAAQ,EAAEC,YADZ;AAEE,IAAA,OAAO,EAAEH,OAFX;AAGE,IAAA,MAAM,EAAEf,MAHV,CAIE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAmBD;;AAED,eAAec,MAAf","sourcesContent":["import React from 'react'\n// import styled from 'styled-components'\nimport RSelect, { ValueType, OptionTypeBase } from 'react-select'\nimport {colors, borderStyles, borderWidths, sizes, radii, space,fontSizes,lineHeights } from './theme'\n\n// const StyledSelect = styled(RSelect)`\n//   width: ${({ theme }) => `${theme.sizes['small']}`};\n//   outline: none;\n//   box-shadow: none;\n//   border: ${({ theme }) => `${theme.borderWidths[1]} ${theme.borderStyles['outline']} ${theme.colors['secondary']}`};\n//   border-radius:0;\n// `\n\nconst styles = {\n  control: (provided:any) => ({\n    ...provided,\n    // none of react-select's styles are passed to <Control />\n    width:sizes[\"medium\"],\n    paddingTop:space[1],\n    paddingBottom:space[1],\n    // paddingX:{2},\n    fontSize:fontSizes[2],\n    lineHeight:lineHeights[1],\n    borderStyle:borderStyles['outline'],\n    borderWidth:borderWidths[1],\n    borderColor:colors[\"secondary\"],\n    backgroundColor:colors[\"transparent\"],\n    color:colors[\"text\"],\n    borderRadius:radii[0],\n  }),\n}\n\ninterface SelectProps {\n  options: {label:string,value:string}[]\n  onChange: (value:ValueType<any>) => void\n}\n\nfunction Select({options,onChange, ...rest}:SelectProps){\n  // const [state, setState] = useState('')\n  // const onChangeMemo = useCallback(onChange,[])\n\n  // useEffect(() => {\n  //   onChangeMemo(state)\n  // }, [state, onChangeMemo])\n\n  const handleChange = (value: ValueType<any>) => {\n    // e.preventDefault()\n    onChange(value)\n  }\n\n  return (\n    <RSelect {...rest}\n      onChange={handleChange}\n      options={options}\n      styles={styles}\n      // as=\"select\"\n      // width=\"small\"\n      // paddingY={1}\n      // paddingX={2}\n      // fontSize={2}\n      // lineHeight={1}\n      // borderStyle='outline'\n      // borderWidth={1}\n      // borderColor=\"secondary\"\n      // backgroundColor=\"transparent\"\n      // color=\"text\"\n      // borderRadius={0}\n    />\n  )\n}\n\nexport default Select\n\n"]},"metadata":{},"sourceType":"module"}