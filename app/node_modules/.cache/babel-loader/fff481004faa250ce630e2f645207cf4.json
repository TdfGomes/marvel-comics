{"ast":null,"code":"var _jsxFileName = \"/Users/tiagogomes/Documents/beezy/app/src/components/UI/Select.tsx\";\nimport React, { useState, useCallback, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Box from './Box';\nconst StyledSelect = styled(Box)({\n  outline: \"none\"\n});\n\nfunction Select({\n  options,\n  onChange,\n  ...rest\n}) {\n  const [state, setState] = useState('');\n  const onChangeMemo = useCallback(onChange, []);\n  useEffect(() => {\n    onChange(state);\n  }, [state, onChange]);\n\n  const handleChange = e => {\n    e.preventDefault();\n    setState(e.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(StyledSelect, Object.assign({}, rest, {\n    onChange: handleChange,\n    as: \"select\",\n    width: \"small\",\n    paddingY: 1,\n    paddingX: 2,\n    fontSize: 2,\n    lineHeight: 1,\n    borderStyle: \"outline\",\n    borderWidth: 1,\n    borderColor: \"secondary\",\n    backgroundColor: \"transparent\",\n    color: \"text\",\n    borderRadius: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }), options.map(({\n    label,\n    value\n  }) => /*#__PURE__*/React.createElement(\"option\", {\n    key: value,\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, label)));\n}\n\nexport default Select;","map":{"version":3,"sources":["/Users/tiagogomes/Documents/beezy/app/src/components/UI/Select.tsx"],"names":["React","useState","useCallback","useEffect","styled","Box","StyledSelect","outline","Select","options","onChange","rest","state","setState","onChangeMemo","handleChange","e","preventDefault","target","value","map","label"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,EAAuCC,SAAvC,QAAwD,OAAxD;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,GAAP,MAA8B,OAA9B;AAGA,MAAMC,YAAY,GAAGF,MAAM,CAACC,GAAD,CAAN,CAAsB;AACzCE,EAAAA,OAAO,EAAC;AADiC,CAAtB,CAArB;;AASA,SAASC,MAAT,CAAgB;AAACC,EAAAA,OAAD;AAASC,EAAAA,QAAT;AAAmB,KAAGC;AAAtB,CAAhB,EAAwD;AACtD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMa,YAAY,GAAGZ,WAAW,CAACQ,QAAD,EAAU,EAAV,CAAhC;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,QAAQ,CAACE,KAAD,CAAR;AACD,GAFQ,EAEN,CAACA,KAAD,EAAQF,QAAR,CAFM,CAAT;;AAIA,QAAMK,YAAY,GAAIC,CAAD,IAA6C;AAChEA,IAAAA,CAAC,CAACC,cAAF;AACAJ,IAAAA,QAAQ,CAACG,CAAC,CAACE,MAAF,CAASC,KAAV,CAAR;AACD,GAHD;;AAKA,sBACE,oBAAC,YAAD,oBAAkBR,IAAlB;AACE,IAAA,QAAQ,EAAEI,YADZ;AAEE,IAAA,EAAE,EAAC,QAFL;AAGE,IAAA,KAAK,EAAC,OAHR;AAIE,IAAA,QAAQ,EAAE,CAJZ;AAKE,IAAA,QAAQ,EAAE,CALZ;AAME,IAAA,QAAQ,EAAE,CANZ;AAOE,IAAA,UAAU,EAAE,CAPd;AAQE,IAAA,WAAW,EAAC,SARd;AASE,IAAA,WAAW,EAAE,CATf;AAUE,IAAA,WAAW,EAAC,WAVd;AAWE,IAAA,eAAe,EAAC,aAXlB;AAYE,IAAA,KAAK,EAAC,MAZR;AAaE,IAAA,YAAY,EAAE,CAbhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAeGN,OAAO,CAACW,GAAR,CAAY,CAAC;AAACC,IAAAA,KAAD;AAAOF,IAAAA;AAAP,GAAD,kBACX;AAAQ,IAAA,GAAG,EAAEA,KAAb;AAAoB,IAAA,KAAK,EAAEA,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCE,KAAnC,CADD,CAfH,CADF;AAqBD;;AAED,eAAeb,MAAf","sourcesContent":["import React, { useState, useCallback, useEffect } from 'react'\nimport styled from 'styled-components'\nimport Box, { BoxProps } from './Box'\n\n\nconst StyledSelect = styled(Box)<BoxProps>({\n  outline:\"none\"\n})\n\ninterface SelectProps {\n  options: {label:string,value:string}[]\n  onChange: (value:string) => void\n}\n\nfunction Select({options,onChange, ...rest}:SelectProps){\n  const [state, setState] = useState('')\n  const onChangeMemo = useCallback(onChange,[])\n\n  useEffect(() => {\n    onChange(state)\n  }, [state, onChange])\n\n  const handleChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    e.preventDefault()\n    setState(e.target.value)\n  }\n\n  return (\n    <StyledSelect {...rest}\n      onChange={handleChange}\n      as=\"select\"\n      width=\"small\"\n      paddingY={1}\n      paddingX={2}\n      fontSize={2}\n      lineHeight={1}\n      borderStyle='outline'\n      borderWidth={1}\n      borderColor=\"secondary\"\n      backgroundColor=\"transparent\"\n      color=\"text\"\n      borderRadius={0}\n    >\n      {options.map(({label,value}) => (\n        <option key={value} value={value}>{label}</option>\n      ))}\n    </StyledSelect>\n  )\n}\n\nexport default Select\n\n"]},"metadata":{},"sourceType":"module"}