{"ast":null,"code":"import 'whatwg-fetch';\nimport { useState } from 'react';\nexport function useCharacters(characters) {\n  const [isLoading, setLoading] = useState(true);\n  const [charactersImgs, setCharacter] = useState([]);\n  const urlsToFetch = characters.map(character => character.resourceURI.split(/public/g).pop());\n  console.log('urlsToFetch', urlsToFetch); // useEffect(() => {\n  //   async function getCharacters() {\n  //     const response = await fetch(`${API_URL}/comics`)\n  //     const data = await response.json()\n  //     setCharacter(data)\n  //     setLoading(false)\n  //   }\n  //   getCharacters()\n  // }, [])\n\n  return {\n    isLoading\n  };\n}","map":{"version":3,"sources":["/Users/tiagogomes/Documents/beezy/app/src/hooks/useCharacters.ts"],"names":["useState","useCharacters","characters","isLoading","setLoading","charactersImgs","setCharacter","urlsToFetch","map","character","resourceURI","split","pop","console","log"],"mappings":"AAAA,OAAO,cAAP;AACA,SAAoBA,QAApB,QAAoC,OAApC;AAIA,OAAO,SAASC,aAAT,CAAuBC,UAAvB,EAA6D;AAClE,QAAM,CAACC,SAAD,EAAYC,UAAZ,IAA0BJ,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACK,cAAD,EAAiBC,YAAjB,IAAiCN,QAAQ,CAAU,EAAV,CAA/C;AAEA,QAAMO,WAAW,GAAGL,UAAU,CAACM,GAAX,CAAeC,SAAS,IAAIA,SAAS,CAACC,WAAV,CAAsBC,KAAtB,CAA4B,SAA5B,EAAuCC,GAAvC,EAA5B,CAApB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BP,WAA3B,EANkE,CAOlE;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA,SAAO;AAAEJ,IAAAA;AAAF,GAAP;AACD","sourcesContent":["import 'whatwg-fetch'\nimport { useEffect, useState } from 'react'\nimport { API_URL } from '../utils/constants'\nimport { Character,Image, UseCharacters } from './Comic'\n\nexport function useCharacters(characters:Character[]): UseCharacters{\n  const [isLoading, setLoading] = useState(true)\n  const [charactersImgs, setCharacter] = useState<Image[]>([])\n  \n  const urlsToFetch = characters.map(character => character.resourceURI.split(/public/g).pop())\n\n  console.log('urlsToFetch', urlsToFetch)\n  // useEffect(() => {\n  //   async function getCharacters() {\n  //     const response = await fetch(`${API_URL}/comics`)\n  //     const data = await response.json()\n      \n  //     setCharacter(data)\n  //     setLoading(false)\n  //   }\n  //   getCharacters()\n  // }, [])\n  \n  return { isLoading }\n}\n"]},"metadata":{},"sourceType":"module"}