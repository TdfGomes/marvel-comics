{"ast":null,"code":"export const sortingOptions = Object.freeze({\n  asc: (a, b) => a.title > b.title ? 1 : -1,\n  desc: (a, b) => a.title < b.title ? 1 : -1\n});\nexport const filterByCharacter = terms => a => {\n  const charactersName = a.characters.items.map(({\n    name\n  }) => name);\n  return charactersName.some(character => terms.includes(character));\n};\nexport const filterComics = terms => arr => !terms.length ? arr : arr.filter(filterByCharacter(terms));\nexport const sortByTitle = fn => arr => !fn ? arr : arr.sort(fn);","map":{"version":3,"sources":["/Users/tiagogomes/Documents/beezy/app/src/utils/sortFilter.ts"],"names":["sortingOptions","Object","freeze","asc","a","b","title","desc","filterByCharacter","terms","charactersName","characters","items","map","name","some","character","includes","filterComics","arr","length","filter","sortByTitle","fn","sort"],"mappings":"AAMA,OAAO,MAAMA,cAA4B,GAAGC,MAAM,CAACC,MAAP,CAAc;AACxDC,EAAAA,GAAG,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAWD,CAAC,CAACE,KAAF,GAAUD,CAAC,CAACC,KAAZ,GAAoB,CAApB,GAAwB,CAAC,CADe;AAExDC,EAAAA,IAAI,EAAE,CAACH,CAAD,EAAIC,CAAJ,KAAWD,CAAC,CAACE,KAAF,GAAUD,CAAC,CAACC,KAAZ,GAAoB,CAApB,GAAwB,CAAC;AAFc,CAAd,CAArC;AAKP,OAAO,MAAME,iBAAiB,GAAIC,KAAD,IAAsBL,CAAD,IAAc;AAClE,QAAMM,cAAc,GAAGN,CAAC,CAACO,UAAF,CAAaC,KAAb,CAAmBC,GAAnB,CAAuB,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAyBA,IAAhD,CAAvB;AACA,SAAOJ,cAAc,CAACK,IAAf,CAAqBC,SAAD,IAAeP,KAAK,CAACQ,QAAN,CAAeD,SAAf,CAAnC,CAAP;AACD,CAHM;AAIP,OAAO,MAAME,YAAY,GAAIT,KAAD,IAAsBU,GAAD,IAC/C,CAACV,KAAK,CAACW,MAAP,GAAgBD,GAAhB,GAAsBA,GAAG,CAACE,MAAJ,CAAWb,iBAAiB,CAACC,KAAD,CAA5B,CADjB;AAGP,OAAO,MAAMa,WAAW,GAAIC,EAAD,IAAcJ,GAAD,IAAmB,CAACI,EAAD,GAAMJ,GAAN,GAAYA,GAAG,CAACK,IAAJ,CAASD,EAAT,CAAhE","sourcesContent":["import { Comic, Character } from '../hooks/Comic'\n\ninterface ISortByTitle {\n  [key: string]: (a: Comic, b: Comic) => number\n}\n\nexport const sortingOptions: ISortByTitle = Object.freeze({\n  asc: (a, b) => (a.title > b.title ? 1 : -1),\n  desc: (a, b) => (a.title < b.title ? 1 : -1),\n})\n\nexport const filterByCharacter = (terms: string[]) => (a: Comic) => {\n  const charactersName = a.characters.items.map(({ name }: Character) => name)\n  return charactersName.some((character) => terms.includes(character))\n}\nexport const filterComics = (terms: string[]) => (arr: Comic[]) =>\n  !terms.length ? arr : arr.filter(filterByCharacter(terms))\n\nexport const sortByTitle = (fn: any) => (arr: Comic[]) => (!fn ? arr : arr.sort(fn))\n\n\n\n"]},"metadata":{},"sourceType":"module"}