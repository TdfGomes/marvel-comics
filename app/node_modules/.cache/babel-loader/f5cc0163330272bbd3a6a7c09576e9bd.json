{"ast":null,"code":"import 'whatwg-fetch';\nimport { useEffect, useState } from 'react';\nimport { API_URL } from '../utils/constants';\nexport function useComics() {\n  const [isLoading, setLoading] = useState(true);\n  const [offset, setOffset] = useState(0);\n  const [comics, setComics] = useState([]);\n\n  function loadMore() {\n    setLoading(true);\n    setOffset(20 + offset);\n  }\n\n  function setData(newData) {\n    setComics(newData);\n  }\n\n  useEffect(() => {\n    async function getComics() {\n      const response = await fetch(`${API_URL}/comics?offset=${offset}`);\n      const data = await response.json();\n      setComics(prevComics => [...prevComics, ...data.data.results]);\n      setLoading(false);\n    }\n\n    getComics();\n  }, [offset]);\n  return {\n    isLoading,\n    data: comics,\n    setData,\n    offset,\n    loadMore\n  };\n}","map":{"version":3,"sources":["/Users/tiagogomes/Documents/beezy/app/src/hooks/useComics.ts"],"names":["useEffect","useState","API_URL","useComics","isLoading","setLoading","offset","setOffset","comics","setComics","loadMore","setData","newData","getComics","response","fetch","data","json","prevComics","results"],"mappings":"AAAA,OAAO,cAAP;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,OAAT,QAAwB,oBAAxB;AAGA,OAAO,SAASC,SAAT,GAA+B;AACpC,QAAM,CAACC,SAAD,EAAYC,UAAZ,IAA0BJ,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAU,EAAV,CAApC;;AAEA,WAASS,QAAT,GAAoB;AAClBL,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,IAAAA,SAAS,CAAC,KAAKD,MAAN,CAAT;AACD;;AAED,WAASK,OAAT,CAAiBC,OAAjB,EAA0B;AACxBH,IAAAA,SAAS,CAACG,OAAD,CAAT;AACD;;AAEDZ,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAea,SAAf,GAA2B;AACzB,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEb,OAAQ,kBAAiBI,MAAO,EAApC,CAA5B;AACA,YAAMU,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AAEAR,MAAAA,SAAS,CAAES,UAAD,IAAiB,CACzB,GAAGA,UADsB,EAEzB,GAAGF,IAAI,CAACA,IAAL,CAAUG,OAFY,CAAlB,CAAT;AAIAd,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD;;AACDQ,IAAAA,SAAS;AACV,GAZQ,EAYN,CAACP,MAAD,CAZM,CAAT;AAiBA,SAAO;AAAEF,IAAAA,SAAF;AAAaY,IAAAA,IAAI,EAAER,MAAnB;AAA2BG,IAAAA,OAA3B;AAAoCL,IAAAA,MAApC;AAA4CI,IAAAA;AAA5C,GAAP;AACD","sourcesContent":["import 'whatwg-fetch'\nimport { useEffect, useState } from 'react'\nimport { API_URL } from '../utils/constants'\nimport { Comic, UseComics } from './Comic'\n\nexport function useComics(): UseComics{\n  const [isLoading, setLoading] = useState(true)\n  const [offset, setOffset] = useState(0)\n  const [comics, setComics] = useState<Comic[]>([])\n  \n  function loadMore() {\n    setLoading(true)\n    setOffset(20 + offset)\n  }\n\n  function setData(newData) {\n    setComics(newData)\n  }\n\n  useEffect(() => {\n    async function getComics() {\n      const response = await fetch(`${API_URL}/comics?offset=${offset}`)\n      const data = await response.json()\n      \n      setComics((prevComics) => ([\n        ...prevComics,\n        ...data.data.results\n      ]))\n      setLoading(false)\n    }\n    getComics()\n  }, [offset])\n\n \n  \n  \n  return { isLoading, data: comics, setData, offset, loadMore }\n}\n"]},"metadata":{},"sourceType":"module"}