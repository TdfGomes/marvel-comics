{"ast":null,"code":"var _jsxFileName = \"/Users/tiagogomes/Documents/beezy/app/src/components/Master/Master.tsx\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useRouteMatch } from 'react-router-dom';\nimport { useComics } from '../../hooks';\nimport { Ul, Li } from '../UI/Lists';\nimport Link from '../UI/Link';\nimport Button from '../UI/Button';\nimport Grid from '../UI/Grid';\nimport Loader from '../UI/Loader';\nimport Select from '../UI/Select';\nconst options = [{\n  label: 'A > Z',\n  value: 'aToz'\n}, {\n  label: 'Z > A',\n  value: 'zToa'\n}];\n\nfunction Master() {\n  const {\n    data,\n    isLoading,\n    loadMore,\n    setData\n  } = useComics();\n  const {\n    url\n  } = useRouteMatch();\n  const [sortAndFilterOptions, setSortAndFilter] = useState('a>z');\n  const sortingOptions = {\n    aToz: (a, b) => a.title < b.title ? 1 : -1,\n    zToa: (a, b) => a.title > b.title ? 1 : -1\n  }; // const filterByCharacter = (term: string) => (a: Comic) => {\n  //   const charactersName = a.characters.items.map(({ name }: Character) => name)\n  //   return charactersName.includes(term)\n  // }\n  // const filterComics = (term: string) => (arr: Comic[]) => arr.filter(filterByCharacter(term))\n  // const sortAndFilter = compose(sortComics, filterComics('Captain America'))\n\n  const dataToRender = useRef(data); // console.log(dataToRender)\n\n  useEffect(() => {\n    // setData(data.sort(sortingOptions[sortAndFilterOptions]))\n    dataToRender.current = data.sort(sortingOptions[sortAndFilterOptions]);\n    console.log('FROM HOOK ==> ', sortAndFilterOptions);\n  }, [sortAndFilterOptions, data, sortingOptions, setData]);\n\n  function handleChange(opt) {\n    setSortAndFilter(opt);\n    console.log('FROM HANDLE ==> ', sortAndFilterOptions); // setData(data.sort(sortingOptions[opt]))\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Select, {\n    options: options,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), !dataToRender.current.length && isLoading && /*#__PURE__*/React.createElement(Loader, {\n    big: true,\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 55\n    }\n  }), /*#__PURE__*/React.createElement(Ul, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, console.log(dataToRender.current), dataToRender.current.map(({\n    id,\n    title\n  }, idx) => /*#__PURE__*/React.createElement(Li, {\n    paddingY: 1,\n    paddingX: 5,\n    key: `${idx}/${id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    fontSize: 4,\n    to: `${url}/${id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, title)))), dataToRender.current.length > 0 && /*#__PURE__*/React.createElement(Grid, {\n    variant: \"container\",\n    justifyContent: \"center\",\n    marginY: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    isLoading: isLoading,\n    onClick: () => loadMore(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, \"Load More\")));\n}\n\nexport default Master;","map":{"version":3,"sources":["/Users/tiagogomes/Documents/beezy/app/src/components/Master/Master.tsx"],"names":["React","useState","useEffect","useRef","useRouteMatch","useComics","Ul","Li","Link","Button","Grid","Loader","Select","options","label","value","Master","data","isLoading","loadMore","setData","url","sortAndFilterOptions","setSortAndFilter","sortingOptions","aToz","a","b","title","zToa","dataToRender","current","sort","console","log","handleChange","opt","length","map","id","idx"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef} from 'react'\nimport {useRouteMatch} from 'react-router-dom'\nimport { useComics } from '../../hooks'\nimport { Comic, UseComics, Character } from '../../hooks/Comic'\nimport UserActions from './UserActions'\n\nimport {Ul, Li} from '../UI/Lists'\nimport Link from '../UI/Link'\nimport Button from '../UI/Button'\nimport Grid from '../UI/Grid'\nimport Loader from '../UI/Loader'\nimport Select from '../UI/Select'\n\nimport compose from '../../utils/compose'\n\ninterface ISortByTitle {\n  [key: string]: (a: Comic, b: Comic) => number\n}\n\nconst options = [\n  { label: 'A > Z', value: 'aToz' },\n  { label: 'Z > A', value: 'zToa' }\n]\n\nfunction Master(){\n  const { data, isLoading, loadMore, setData }: UseComics = useComics()\n  const { url } = useRouteMatch();\n  const [sortAndFilterOptions, setSortAndFilter] = useState<string>('a>z')\n  \n\n  const sortingOptions: ISortByTitle = {\n    aToz: (a,b) => a.title < b.title ? 1 : -1,\n    zToa: (a, b) => a.title > b.title ? 1 : -1,\n  }\n  // const filterByCharacter = (term: string) => (a: Comic) => {\n    //   const charactersName = a.characters.items.map(({ name }: Character) => name)\n    //   return charactersName.includes(term)\n    // }\n    // const filterComics = (term: string) => (arr: Comic[]) => arr.filter(filterByCharacter(term))\n    // const sortAndFilter = compose(sortComics, filterComics('Captain America'))\n  const dataToRender = useRef<Comic[]>(data)\n  // console.log(dataToRender)\n  useEffect(() => {\n    // setData(data.sort(sortingOptions[sortAndFilterOptions]))\n    dataToRender.current = data.sort(sortingOptions[sortAndFilterOptions])\n    \n    console.log('FROM HOOK ==> ',sortAndFilterOptions)\n    \n  }, [sortAndFilterOptions, data, sortingOptions, setData])\n  \n  function handleChange(opt: string){\n    setSortAndFilter(opt)\n    console.log('FROM HANDLE ==> ',sortAndFilterOptions)\n    \n    // setData(data.sort(sortingOptions[opt]))\n  }\n\n  return (\n    <>\n      <Select options={options} onChange={handleChange} />\n      {(!dataToRender.current.length && isLoading) && <Loader big color=\"secondary\" />}\n      <Ul>\n        {console.log(dataToRender.current)}\n        {dataToRender.current.map(({ id, title }: Comic, idx) => (\n          <Li\n            paddingY={1}\n            paddingX={5}\n            key={`${idx}/${id}`}\n          >\n            <Link fontSize={4} to={`${url}/${id}`}>{title}</Link>\n          </Li>\n        ))}\n      </Ul>\n      {dataToRender.current.length > 0 && (\n        <Grid variant=\"container\" justifyContent=\"center\" marginY={2}>\n          <Button isLoading={isLoading} onClick={() => loadMore()}>Load More</Button>\n        </Grid>\n      )}\n    </>\n  )\n    \n  \n}\n\nexport default Master"]},"metadata":{},"sourceType":"module"}