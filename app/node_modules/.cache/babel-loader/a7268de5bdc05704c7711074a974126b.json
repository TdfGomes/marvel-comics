{"ast":null,"code":"import 'whatwg-fetch';\nimport { useEffect, useState } from 'react';\nimport { API_URL } from '../utils/constants';\nexport function useComic(id) {\n  const [isLoading, setLoading] = useState(true);\n  const [comics, setComics] = useState([]);\n  useEffect(() => {\n    async function getComics() {\n      const response = await fetch(`${API_URL}/comics/${id}`);\n      const data = await response.json();\n      setComics(await data.data.results);\n      setLoading(false);\n    }\n\n    getComics();\n  }, [id]);\n  return {\n    isLoading,\n    data: comics\n  };\n}","map":{"version":3,"sources":["/Users/tiagogomes/Documents/beezy/app/src/hooks/useComic.ts"],"names":["useEffect","useState","API_URL","useComic","id","isLoading","setLoading","comics","setComics","getComics","response","fetch","data","json","results"],"mappings":"AAAA,OAAO,cAAP;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,OAAT,QAAwB,oBAAxB;AAGA,OAAO,SAASC,QAAT,CAAkBC,EAAlB,EAAwC;AAC7C,QAAM,CAACC,SAAD,EAAYC,UAAZ,IAA0BL,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAU,EAAV,CAApC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeS,SAAf,GAA2B;AACzB,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAET,OAAQ,WAAUE,EAAG,EAAzB,CAA5B;AACA,YAAMQ,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAL,MAAAA,SAAS,CAAC,MAAMI,IAAI,CAACA,IAAL,CAAUE,OAAjB,CAAT;AACAR,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD;;AACDG,IAAAA,SAAS;AACV,GARQ,EAQN,CAACL,EAAD,CARM,CAAT;AASA,SAAO;AAAEC,IAAAA,SAAF;AAAaO,IAAAA,IAAI,EAAEL;AAAnB,GAAP;AACD","sourcesContent":["import 'whatwg-fetch'\nimport { useEffect, useState } from 'react'\nimport { API_URL } from '../utils/constants'\nimport { Comic, UseComics } from './Comic'\n\nexport function useComic(id:number): UseComics {\n  const [isLoading, setLoading] = useState(true)\n  const [comics, setComics] = useState<Comic[]>([])\n  useEffect(() => {\n    async function getComics() {\n      const response = await fetch(`${API_URL}/comics/${id}`)\n      const data = await response.json()\n      setComics(await data.data.results)\n      setLoading(false)\n    }\n    getComics()\n  }, [id])\n  return { isLoading, data: comics }\n}\n"]},"metadata":{},"sourceType":"module"}