{"ast":null,"code":"var _jsxFileName = \"/Users/tiagogomes/Documents/beezy/app/src/components/Detail/Characters.tsx\";\nimport React from 'react';\nimport { useCharacters } from '../../hooks';\nimport { SectionTitle, P } from '../UI/Typoraphy';\nimport Img from '../UI/Img';\nimport Loader from '../UI/Loader';\nimport Grid from '../UI/Grid';\n\nfunction Characters({\n  characters\n}) {\n  const {\n    data,\n    isLoading\n  } = useCharacters(characters);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SectionTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, \"Characters:\"), isLoading && /*#__PURE__*/React.createElement(Loader, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    variant: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, data.map(({\n    thumbnail: {\n      path,\n      extension\n    },\n    name\n  }, idx) => /*#__PURE__*/React.createElement(Grid, {\n    variant: \"item\",\n    key: idx,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Img, {\n    src: `${path}.${extension}`,\n    alt: \"character image\",\n    width: \"thumbnail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(P, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, name)))));\n}\n\nexport default Characters;","map":{"version":3,"sources":["/Users/tiagogomes/Documents/beezy/app/src/components/Detail/Characters.tsx"],"names":["React","useCharacters","SectionTitle","P","Img","Loader","Grid","Characters","characters","data","isLoading","map","thumbnail","path","extension","name","idx"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,aAAR,QAA4B,aAA5B;AAEA,SAASC,YAAT,EAAuBC,CAAvB,QAAgC,iBAAhC;AAEA,OAAOC,GAAP,MAAgB,WAAhB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,IAAP,MAAiB,YAAjB;;AAMA,SAASC,UAAT,CAAoB;AAACC,EAAAA;AAAD,CAApB,EAAiD;AAC/C,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA;AAAP,MAAkCT,aAAa,CAACO,UAAD,CAArD;AAEA,sBACE,uDACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEGE,SAAS,iBAAI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFhB,eAGE,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,IAAI,CAACE,GAAL,CAAS,CAAC;AAAEC,IAAAA,SAAS,EAAE;AAACC,MAAAA,IAAD;AAAOC,MAAAA;AAAP,KAAb;AAAgCC,IAAAA;AAAhC,GAAD,EAAuCC,GAAvC,kBACR,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAC,MAAd;AAAqB,IAAA,GAAG,EAAEA,GAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,GAAG,EAAG,GAAEH,IAAK,IAAGC,SAAU,EAA/B;AAAkC,IAAA,GAAG,EAAC,iBAAtC;AAAwD,IAAA,KAAK,EAAE,WAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,CAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIC,IAAJ,CAFF,CADD,CADH,CAHF,CADF;AAcD;;AAED,eAAeR,UAAf","sourcesContent":["import React from 'react'\nimport {useCharacters} from '../../hooks'\nimport {Character, UseCharacters} from '../../hooks/Comic'\nimport { SectionTitle, P } from '../UI/Typoraphy'\n\nimport Img from '../UI/Img'\nimport Loader from '../UI/Loader'\nimport Grid from '../UI/Grid'\n\ninterface CharactersProps {\n  characters: Character[]\n}\n\nfunction Characters({characters}:CharactersProps){\n  const {data, isLoading}:UseCharacters = useCharacters(characters)\n  \n  return (\n    <>\n      <SectionTitle>Characters:</SectionTitle>\n      {isLoading && <Loader color=\"primary\" />}\n      <Grid variant=\"container\">\n        {data.map(({ thumbnail: {path, extension}, name},idx) => (\n          <Grid variant=\"item\" key={idx}>\n            <Img src={`${path}.${extension}`} alt=\"character image\" width={\"thumbnail\"}/>\n            <P>{name}</P>\n          </Grid>\n        ))}\n      </Grid>\n    </>\n  )\n}\n\nexport default Characters"]},"metadata":{},"sourceType":"module"}