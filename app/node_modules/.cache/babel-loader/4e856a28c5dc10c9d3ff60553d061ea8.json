{"ast":null,"code":"var _jsxFileName = \"/Users/tiagogomes/Documents/beezy/app/src/components/Master/Master.tsx\";\nimport React, { useState } from 'react';\nimport { useRouteMatch } from 'react-router-dom';\nimport { useComics } from '../../hooks';\nimport UserActions from './UserActions';\nimport { Ul, Li } from '../UI/Lists';\nimport Link from '../UI/Link';\nimport Button from '../UI/Button';\nimport Grid from '../UI/Grid';\nimport Loader from '../UI/Loader'; // import compose from '../../utils/compose'\n\nconst sortingOptions = Object.freeze({\n  asc: (a, b) => a.title > b.title ? 1 : -1,\n  desc: (a, b) => a.title < b.title ? 1 : -1\n});\n\nconst filterByCharacter = terms => a => {\n  const charactersName = a.characters.items.map(({\n    name\n  }) => name);\n  return charactersName.some(character => terms.includes(character));\n};\n\nconst filterComics = terms => arr => arr.filter(filterByCharacter(terms));\n\nconst sortByTitle = fn => arr => arr.sort(fn);\n\nconst compose = (f, g) => arr => f(g(arr));\n\nconst pipe = (...fns) => arr => fns.reduce((y, f) => f(y), arr);\n\nfunction Master() {\n  const {\n    data,\n    isLoading,\n    loadMore\n  } = useComics();\n  const {\n    url\n  } = useRouteMatch();\n  const [sortOpt, setSortOpt] = useState('asc');\n  const [filterOpts, setFilterOpts] = useState([]);\n  const dataFiltered = filterComics(filterOpts);\n  const dataSorted = sortByTitle(sortingOptions[sortOpt]);\n  const composedData = compose(dataFiltered, dataSorted)(data); // console.log(dataFiltered(data))\n\n  console.log(composedData); // const sortAndFilter = compose(sortComics, filterComics('Captain America'))\n  // const dataToRender = useRef<Comic[]>(data)\n  // let dataToRender\n  // console.log(dataToRender)\n  // useEffect(() => {\n  //   // setData(data.sort(sortingOptions[sortAndFilterOptions]))\n  //   dataToRender.current = data.sort(sortingOptions[sortAndFilterOptions])\n  //   console.log('FROM HOOK ==> ',sortAndFilterOptions)\n  // }, [sortAndFilterOptions,data])\n\n  function handleSort(opt) {\n    setSortOpt(opt);\n  }\n\n  function handleFilter(opt) {\n    setFilterOpts(opt);\n  }\n\n  const dataToRender = data.sort(sortingOptions[sortOpt]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(UserActions, {\n    sort: handleSort,\n    filter: handleFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }), !dataToRender.length && isLoading && /*#__PURE__*/React.createElement(Loader, {\n    big: true,\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(Ul, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, dataToRender.map(({\n    id,\n    title\n  }, idx) => /*#__PURE__*/React.createElement(Li, {\n    paddingY: 1,\n    paddingX: 5,\n    key: `${idx}/${id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    fontSize: 4,\n    to: `${url}/${id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, title)))), dataToRender.length > 0 && /*#__PURE__*/React.createElement(Grid, {\n    variant: \"container\",\n    justifyContent: \"center\",\n    marginY: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    isLoading: isLoading,\n    onClick: () => loadMore(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, \"Load More\")));\n}\n\nexport default Master;","map":{"version":3,"sources":["/Users/tiagogomes/Documents/beezy/app/src/components/Master/Master.tsx"],"names":["React","useState","useRouteMatch","useComics","UserActions","Ul","Li","Link","Button","Grid","Loader","sortingOptions","Object","freeze","asc","a","b","title","desc","filterByCharacter","terms","charactersName","characters","items","map","name","some","character","includes","filterComics","arr","filter","sortByTitle","fn","sort","compose","f","g","pipe","fns","reduce","y","Master","data","isLoading","loadMore","url","sortOpt","setSortOpt","filterOpts","setFilterOpts","dataFiltered","dataSorted","composedData","console","log","handleSort","opt","handleFilter","dataToRender","length","id","idx"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAkD,OAAlD;AACA,SAAQC,aAAR,QAA4B,kBAA5B;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,SAAQC,EAAR,EAAYC,EAAZ,QAAqB,aAArB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,MAAP,MAAmB,cAAnB,C,CAEA;;AAMA,MAAMC,cAA4B,GAAGC,MAAM,CAACC,MAAP,CAAc;AACjDC,EAAAA,GAAG,EAAE,CAACC,CAAD,EAAGC,CAAH,KAASD,CAAC,CAACE,KAAF,GAAUD,CAAC,CAACC,KAAZ,GAAoB,CAApB,GAAwB,CAAC,CADU;AAEjDC,EAAAA,IAAI,EAAE,CAACH,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,KAAF,GAAUD,CAAC,CAACC,KAAZ,GAAoB,CAApB,GAAwB,CAAC;AAFQ,CAAd,CAArC;;AAKA,MAAME,iBAAiB,GAAIC,KAAD,IAAsBL,CAAD,IAAc;AAC3D,QAAMM,cAAc,GAAGN,CAAC,CAACO,UAAF,CAAaC,KAAb,CAAmBC,GAAnB,CAAuB,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAyBA,IAAhD,CAAvB;AACA,SAAOJ,cAAc,CAACK,IAAf,CAAqBC,SAAD,IAAeP,KAAK,CAACQ,QAAN,CAAeD,SAAf,CAAnC,CAAP;AACD,CAHD;;AAIA,MAAME,YAAY,GAAIT,KAAD,IAAsBU,GAAD,IACxCA,GAAG,CAACC,MAAJ,CAAWZ,iBAAiB,CAACC,KAAD,CAA5B,CADF;;AAGA,MAAMY,WAAW,GAAIC,EAAD,IAAaH,GAAD,IAAiBA,GAAG,CAACI,IAAJ,CAASD,EAAT,CAAjD;;AAEA,MAAME,OAAO,GAAG,CAACC,CAAD,EAASC,CAAT,KAAqBP,GAAD,IAAkBM,CAAC,CAACC,CAAC,CAACP,GAAD,CAAF,CAAvD;;AACA,MAAMQ,IAAI,GAAG,CAAC,GAAGC,GAAJ,KAAmBT,GAAD,IAAkBS,GAAG,CAACC,MAAJ,CAAW,CAACC,CAAD,EAAIL,CAAJ,KAAUA,CAAC,CAACK,CAAD,CAAtB,EAA2BX,GAA3B,CAAjD;;AAGA,SAASY,MAAT,GAAiB;AACf,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,SAAR;AAAmBC,IAAAA;AAAnB,MAA2C1C,SAAS,EAA1D;AACA,QAAM;AAAE2C,IAAAA;AAAF,MAAU5C,aAAa,EAA7B;AACA,QAAM,CAAC6C,OAAD,EAAUC,UAAV,IAAwB/C,QAAQ,CAAS,KAAT,CAAtC;AACA,QAAM,CAACgD,UAAD,EAAaC,aAAb,IAA8BjD,QAAQ,CAAW,EAAX,CAA5C;AAIA,QAAMkD,YAAY,GAAGtB,YAAY,CAACoB,UAAD,CAAjC;AACA,QAAMG,UAAU,GAAGpB,WAAW,CAACrB,cAAc,CAACoC,OAAD,CAAf,CAA9B;AACA,QAAMM,YAAY,GAAGlB,OAAO,CAACgB,YAAD,EAAeC,UAAf,CAAP,CAAkCT,IAAlC,CAArB,CAVe,CAWf;;AACAW,EAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ,EAZe,CAab;AACF;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;;AAEA,WAASG,UAAT,CAAoBC,GAApB,EAA4B;AAC1BT,IAAAA,UAAU,CAACS,GAAD,CAAV;AACD;;AAED,WAASC,YAAT,CAAsBD,GAAtB,EAA8B;AAC5BP,IAAAA,aAAa,CAACO,GAAD,CAAb;AACD;;AAED,QAAME,YAAY,GAAGhB,IAAI,CAACT,IAAL,CAAUvB,cAAc,CAACoC,OAAD,CAAxB,CAArB;AAEA,sBACE,uDACE,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAES,UAAnB;AAA+B,IAAA,MAAM,EAAEE,YAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEG,CAACC,YAAY,CAACC,MAAd,IAAwBhB,SAAxB,iBAAqC,oBAAC,MAAD;AAAQ,IAAA,GAAG,MAAX;AAAY,IAAA,KAAK,EAAC,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFxC,eAGE,oBAAC,EAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGe,YAAY,CAACnC,GAAb,CAAiB,CAAC;AAAEqC,IAAAA,EAAF;AAAM5C,IAAAA;AAAN,GAAD,EAAuB6C,GAAvB,kBAChB,oBAAC,EAAD;AAAI,IAAA,QAAQ,EAAE,CAAd;AAAiB,IAAA,QAAQ,EAAE,CAA3B;AAA8B,IAAA,GAAG,EAAG,GAAEA,GAAI,IAAGD,EAAG,EAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAE,CAAhB;AAAmB,IAAA,EAAE,EAAG,GAAEf,GAAI,IAAGe,EAAG,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG5C,KADH,CADF,CADD,CADH,CAHF,EAYG0C,YAAY,CAACC,MAAb,GAAsB,CAAtB,iBACC,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAC,WAAd;AAA0B,IAAA,cAAc,EAAC,QAAzC;AAAkD,IAAA,OAAO,EAAE,CAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAEhB,SAAnB;AAA8B,IAAA,OAAO,EAAE,MAAMC,QAAQ,EAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CAbJ,CADF;AAwBD;;AAED,eAAeH,MAAf","sourcesContent":["import React, { useState, useEffect, useRef} from 'react'\nimport {useRouteMatch} from 'react-router-dom'\nimport { useComics } from '../../hooks'\nimport { Comic, UseComics, Character } from '../../hooks/Comic'\nimport UserActions from './UserActions'\n\nimport {Ul, Li} from '../UI/Lists'\nimport Link from '../UI/Link'\nimport Button from '../UI/Button'\nimport Grid from '../UI/Grid'\nimport Loader from '../UI/Loader'\n\n// import compose from '../../utils/compose'\n\ninterface ISortByTitle {\n  [key: string]: (a: Comic, b: Comic) => number\n}\n\nconst sortingOptions: ISortByTitle = Object.freeze({\n  asc: (a,b) => a.title > b.title ? 1 : -1,\n  desc: (a, b) => a.title < b.title ? 1 : -1,\n})\n\nconst filterByCharacter = (terms: string[]) => (a: Comic) => {\n  const charactersName = a.characters.items.map(({ name }: Character) => name)\n  return charactersName.some((character) => terms.includes(character))\n}\nconst filterComics = (terms: string[]) => (arr: Comic[]) =>\n  arr.filter(filterByCharacter(terms))\n\nconst sortByTitle = (fn:any) => (arr:Comic[]) => arr.sort(fn)\n\nconst compose = (f: any, g: any) => (arr: Comic[]) => f(g(arr))\nconst pipe = (...fns:any[]) => (arr: Comic[]) => fns.reduce((y, f) => f(y), arr)\n\n\nfunction Master(){\n  const { data, isLoading, loadMore }: UseComics = useComics()\n  const { url } = useRouteMatch();\n  const [sortOpt, setSortOpt] = useState<string>('asc')\n  const [filterOpts, setFilterOpts] = useState<string[]>([])\n  \n\n  \n  const dataFiltered = filterComics(filterOpts)\n  const dataSorted = sortByTitle(sortingOptions[sortOpt])\n  const composedData = compose(dataFiltered, dataSorted)(data)\n  // console.log(dataFiltered(data))\n  console.log(composedData)\n    // const sortAndFilter = compose(sortComics, filterComics('Captain America'))\n  // const dataToRender = useRef<Comic[]>(data)\n  // let dataToRender\n  // console.log(dataToRender)\n  // useEffect(() => {\n  //   // setData(data.sort(sortingOptions[sortAndFilterOptions]))\n  //   dataToRender.current = data.sort(sortingOptions[sortAndFilterOptions])\n    \n  //   console.log('FROM HOOK ==> ',sortAndFilterOptions)\n    \n  // }, [sortAndFilterOptions,data])\n  \n  function handleSort(opt:any){\n    setSortOpt(opt)\n  }\n\n  function handleFilter(opt:any){\n    setFilterOpts(opt)\n  }\n\n  const dataToRender = data.sort(sortingOptions[sortOpt])\n\n  return (\n    <>\n      <UserActions sort={handleSort} filter={handleFilter}/>\n      {!dataToRender.length && isLoading && <Loader big color=\"secondary\" />}\n      <Ul>\n        {dataToRender.map(({ id, title }: Comic, idx) => (\n          <Li paddingY={1} paddingX={5} key={`${idx}/${id}`}>\n            <Link fontSize={4} to={`${url}/${id}`}>\n              {title}\n            </Link>\n          </Li>\n        ))}\n      </Ul>\n      {dataToRender.length > 0 && (\n        <Grid variant=\"container\" justifyContent=\"center\" marginY={2}>\n          <Button isLoading={isLoading} onClick={() => loadMore()}>\n            Load More\n          </Button>\n        </Grid>\n      )}\n    </>\n  )\n    \n  \n}\n\nexport default Master"]},"metadata":{},"sourceType":"module"}