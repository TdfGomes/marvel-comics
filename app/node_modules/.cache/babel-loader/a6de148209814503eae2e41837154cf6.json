{"ast":null,"code":"var _jsxFileName = \"/Users/tiagogomes/Documents/beezy/app/src/components/Master/Master.tsx\";\nimport React, { useState } from 'react';\nimport { useRouteMatch } from 'react-router-dom';\nimport { useComics } from '../../hooks';\nimport UserActions from './UserActions';\nimport { Ul, Li } from '../UI/Lists';\nimport Link from '../UI/Link';\nimport Button from '../UI/Button';\nimport Grid from '../UI/Grid';\nimport Loader from '../UI/Loader';\nimport compose from '../../utils/compose';\nimport { sortingOptions, filterComics, sortByTitle } from '../../utils/sortFilter';\n\nfunction Master() {\n  const {\n    data,\n    isLoading,\n    loadMore\n  } = useComics();\n  const {\n    url\n  } = useRouteMatch();\n  const [sortOpt, setSortOpt] = useState('asc');\n  const [filterOpts, setFilterOpts] = useState([]);\n\n  function handleSort(opt) {\n    setSortOpt(opt);\n  }\n\n  function handleFilter(opt) {\n    setFilterOpts(opt);\n  }\n\n  const dataFiltered = filterComics(filterOpts);\n  const dataSorted = sortByTitle(sortingOptions[sortOpt]);\n  const dataToRender = compose(dataFiltered, dataSorted)(data);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(UserActions, {\n    sort: handleSort,\n    filter: handleFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }), !dataToRender.length && isLoading && /*#__PURE__*/React.createElement(Loader, {\n    big: true,\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(Ul, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, dataToRender.map(({\n    id,\n    title\n  }, idx) => /*#__PURE__*/React.createElement(Li, {\n    paddingY: 1,\n    paddingX: 5,\n    key: `${idx}/${id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    fontSize: 4,\n    to: `${url}/${id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, title)))), dataToRender.length > 0 && /*#__PURE__*/React.createElement(Grid, {\n    variant: \"container\",\n    justifyContent: \"center\",\n    marginY: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    isLoading: isLoading,\n    onClick: () => loadMore(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, \"Load More\")));\n}\n\nexport default Master;","map":{"version":3,"sources":["/Users/tiagogomes/Documents/beezy/app/src/components/Master/Master.tsx"],"names":["React","useState","useRouteMatch","useComics","UserActions","Ul","Li","Link","Button","Grid","Loader","compose","sortingOptions","filterComics","sortByTitle","Master","data","isLoading","loadMore","url","sortOpt","setSortOpt","filterOpts","setFilterOpts","handleSort","opt","handleFilter","dataFiltered","dataSorted","dataToRender","length","map","id","title","idx"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport {useRouteMatch} from 'react-router-dom'\nimport { useComics } from '../../hooks'\nimport { Comic, UseComics } from '../../hooks/Comic'\nimport UserActions from './UserActions'\n\nimport {Ul, Li} from '../UI/Lists'\nimport Link from '../UI/Link'\nimport Button from '../UI/Button'\nimport Grid from '../UI/Grid'\nimport Loader from '../UI/Loader'\n\nimport compose from '../../utils/compose'\nimport { sortingOptions, filterComics, sortByTitle } from '../../utils/sortFilter'\n\nfunction Master(){\n  const { data, isLoading, loadMore }: UseComics = useComics()\n  const { url } = useRouteMatch();\n  const [sortOpt, setSortOpt] = useState<string>('asc')\n  const [filterOpts, setFilterOpts] = useState<string[]>([])\n  \n  \n  function handleSort(opt:any){\n    setSortOpt(opt)\n  }\n  \n  function handleFilter(opt:any){\n    setFilterOpts(opt)\n  }\n  \n  const dataFiltered = filterComics(filterOpts)\n  const dataSorted = sortByTitle(sortingOptions[sortOpt])\n  const dataToRender: Comic[] = compose(dataFiltered, dataSorted)(data)\n\n  return (\n    <>\n      <UserActions sort={handleSort} filter={handleFilter}/>\n      {!dataToRender.length && isLoading && <Loader big color=\"secondary\" />}\n      <Ul>\n        {dataToRender.map(({ id, title }: Comic, idx) => (\n          <Li paddingY={1} paddingX={5} key={`${idx}/${id}`}>\n            <Link fontSize={4} to={`${url}/${id}`}>\n              {title}\n            </Link>\n          </Li>\n        ))}\n      </Ul>\n      {dataToRender.length > 0 && (\n        <Grid variant=\"container\" justifyContent=\"center\" marginY={2}>\n          <Button isLoading={isLoading} onClick={() => loadMore()}>\n            Load More\n          </Button>\n        </Grid>\n      )}\n    </>\n  )\n    \n  \n}\n\nexport default Master"]},"metadata":{},"sourceType":"module"}